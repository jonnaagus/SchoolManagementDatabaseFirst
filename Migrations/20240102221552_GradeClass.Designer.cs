// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementDatabaseFirst.Models;

#nullable disable

namespace SchoolManagementDatabaseFirst.Migrations
{
    [DbContext(typeof(SchoolDatabaseContext))]
    [Migration("20240102221552_GradeClass")]
    partial class GradeClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CourseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Enroll", b =>
                {
                    b.Property<int>("FkcourseId")
                        .HasColumnType("int")
                        .HasColumnName("FKCourseID");

                    b.Property<int>("FkstudentId")
                        .HasColumnType("int")
                        .HasColumnName("FKStudentID");

                    b.ToTable("Enrolls");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.GivesGrade", b =>
                {
                    b.Property<int>("FkcourseId")
                        .HasColumnType("int")
                        .HasColumnName("FKCourseID");

                    b.Property<int>("FkgradeId")
                        .HasColumnType("int")
                        .HasColumnName("FKGradeID");

                    b.Property<int>("FkteacherId")
                        .HasColumnType("int")
                        .HasColumnName("FKTeacherID");

                    b.ToTable("GivesGrades");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    b.Property<int?>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("FKCourseId")
                        .HasColumnType("int");

                    b.Property<int>("FKStudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GradeDate")
                        .HasColumnType("date");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<string>("GradeValue")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("GradeId");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Principal", b =>
                {
                    b.Property<int>("PrincipalId")
                        .HasColumnType("int")
                        .HasColumnName("PrincipalID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrincipalId");

                    b.ToTable("Principal", (string)null);
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonalIdnr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("PersonalIDNr");

                    b.HasKey("StudentID");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Grade", b =>
                {
                    b.HasOne("SchoolManagementDatabaseFirst.Models.Course", "Course")
                        .WithMany("Grades")
                        .HasForeignKey("CourseID");

                    b.HasOne("SchoolManagementDatabaseFirst.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentID");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Course", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("SchoolManagementDatabaseFirst.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
